name: Kurswahl Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven
      - name: Build and Test with Maven
        run: mvn -B package --file kurswahl/pom.xml jacoco:prepare-agent jacoco:report
      - name: Cache Artifact
        uses: actions/cache/save@v3
        with:
          key: ${{ runner.OS }}-CompiledProject-${{ hashFiles('**/package-lock.json') }}
          path: .
          restore-keys: |
            ${{ runner.OS }}-CompiledProject-
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout compiled artifact
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.OS }}-CompiledProject-
          path: .
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    name: Deployment
    runs-on: self-hosted
    needs:
      - build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        if: github.event_name != 'pull_request'
      - name: Start docker-compose
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          export DB_PASSWORD_KURSWAHL=${{ secrets.DB_PASSWORD }}
          export JWT_SECRET="$env:JWT_SECRET"
          docker-compose down
          docker-compose up --build -d
        if: github.event_name != 'pull_request'
