name: Kurswahl Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
  id-token: write
  pages: write

env:
  INSTANCE: 'Writerside/k2'
  ARTIFACT: 'webHelpK22-all.zip'
  DOCKER_VERSION: '233.14938'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven
      - name: Build and Test with Maven
        run: mvn -B package --file kurswahl/pom.xml jacoco:prepare-agent jacoco:report
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: CompiledProject
          path: .
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download compiled artifact
        uses: actions/download-artifact@v3
        with:
          name: CompiledProject
          path: .
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    name: Deploy to Production Environment
    runs-on: ubuntu
    if: github.event_name != 'pull_request'
    needs:
      - build
    environment:
      name: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Start docker-compose
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          export DB_PASSWORD_KURSWAHL=${{ secrets.DB_PASSWORD }}
          export JWT_SECRET="$env:JWT_SECRET"
          docker-compose down
          docker-compose up --build -d
  buildDocs:
    runs-on: ubuntu-latest
    name: Build Documentation
    needs:
      - deploy
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
          retention-days: 7
  testDocs:
    needs: buildDocs
    name: Test Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}
  deployDocs:
    name: Deploy Documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [ buildDocs, testDocs ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs

      - name: Unzip artifact
        run: unzip -O UTF-8 -qq '${{ env.ARTIFACT }}' -d dir

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
